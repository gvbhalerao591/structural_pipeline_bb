#!/bin/sh


# Usage: 
#    bash bb_struct_init <subject_folder> <coefficients_file>
#
# Description:
#    This script processes T1-weighted MRI data, performing gradient distortion correction (if provided), 
#    brain extraction, tissue segmentation, non-linear registration to MNI space, and subcortical 
#    structure segmentation.
#
# Arguments:
#    1) subject_folder        : The path to the subject's folder, which must contain a T1-weighted image.
#    2) coefficients_file     : The coefficients file for Gradient Distortion Correction (GDC). 
#                               Set to "none" if distortion correction is not required.
#
# Required Tools:
#    - FSL (https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/)
#    - bb_pipeline (for bb_GDC, bb_sienax, etc.)
#
# Steps Performed:
#    1. Check if the T1-weighted image is present in the subject's folder.
#    2. Perform Gradient Distortion Correction (GDC) if coefficients are provided.
#    3. Extract the brain region of interest (ROI) based on the head top position.
#    4. Perform brain extraction using FSL's BET tool.
#    5. Reduce the field of view (FOV) by registering the T1 image to a standard MNI space reference.
#    6. Apply affine and non-linear registration to map the T1 image to MNI space.
#    7. Combine gradient distortion and registration transforms for final alignment to MNI space.
#    8. Create a brain mask and apply bias field correction.
#    9. Run tissue segmentation (CSF, GM, WM) using FSL's FAST tool.
#   10. Perform subcortical segmentation using FSL's FIRST tool, with special extraction for the hippocampus.
#   11. Run structural atrophy analysis with bb_sienax.
#
# Notes:
#    - Ensure that the paths to FSL and bb_pipeline binaries are correctly set in your environment.
#    - The coefficients file for GDC should come from the scanner or other calibration source. If no correction
#      is needed, simply pass "none" as the second argument.
#
# Example:
#    bash bb_struct_init /path/to/subject_folder /path/to/coefficients/file
#    bash bb_struct_init /path/to/subject_folder none  # Skips GDC if "none" is provided
#

export BB_BIN_DIR="/vols/Data/BIRAX/BIRAX_proc_GVB/tests/bb_pipeline"
templ="$BB_BIN_DIR/templates"

coeff=$2 # this is the coefficients file from the scanner for distortion correction



cd $1/T1

if [ `${FSLDIR}/bin/imtest T1` = 0 ] ; then
  echo No T1 in $1
  exit
fi

if [ `${FSLDIR}/bin/imtest T1_orig` = 0 ] ; then
  ${FSLDIR}/bin/immv T1 T1_orig
fi


if [ ! "$coeff" == "none" ] ; then
    #Calculate and apply the Gradient Distortion Unwarp
    $BB_BIN_DIR/bb_structural_pipeline/bb_GDC --workingdir=./T1_GDC/ --in=T1_orig.nii.gz --out=T1_orig_ud.nii.gz --owarp=T1_orig_ud_warp.nii.gz --coeff=$coeff
else
    cp T1_orig.nii.gz T1_orig_ud.nii.gz
fi


#Calculate where does the brain start in the z dimension and then extract the roi
head_top=`${FSLDIR}/bin/robustfov -i T1_orig_ud | grep -v Final | head -n 1 | awk '{print $5}'`
${FSLDIR}/bin/fslmaths T1_orig_ud -roi 0 -1 0 -1 $head_top 170 0 1 T1_tmp

#Run a (Recursive) brain extraction on the roi
${FSLDIR}/bin/bet T1_tmp T1_tmp_brain -R

#Reduces the FOV of T1_orig_ud by calculating a registration from T1_tmp_brain to ssref and applies it to T1_orig_ud
${FSLDIR}/bin/standard_space_roi T1_tmp_brain T1_tmp2 -maskNONE -ssref $FSLDIR/data/standard/MNI152_T1_1mm_brain -altinput T1_orig_ud -d

${FSLDIR}/bin/immv T1_tmp2 T1

#Generate the actual affine from the orig_ud volume to the cut version we have now and combine it to have an affine matrix from orig_ud to MNI
${FSLDIR}/bin/flirt -in T1 -ref T1_orig_ud -omat T1_to_T1_orig_ud.mat -schedule $FSLDIR/etc/flirtsch/xyztrans.sch 
${FSLDIR}/bin/convert_xfm -omat T1_orig_ud_to_T1.mat -inverse T1_to_T1_orig_ud.mat
${FSLDIR}/bin/convert_xfm -omat T1_to_MNI_linear.mat -concat T1_tmp2_tmp_to_std.mat T1_to_T1_orig_ud.mat

#Non-linear registration to MNI using the previously calculated alignment
${FSLDIR}/bin/fnirt --in=T1 --ref=$FSLDIR/data/standard/MNI152_T1_1mm --aff=T1_to_MNI_linear.mat \
  --config=$BB_BIN_DIR/bb_data/bb_fnirt.cnf --refmask=$templ/MNI152_T1_1mm_brain_mask_dil_GD7 \
  --logout=../logs/bb_T1_to_MNI_fnirt.log --cout=T1_to_MNI_warp_coef --fout=T1_to_MNI_warp \
  --jout=T1_to_MNI_warp_jac --iout=T1_tmp4.nii.gz --interp=spline


#Combine all transforms (Gradient Distortion Unwarp and T1 to MNI) into one and then apply it.
if [ ! "$coeff" == "none" ] ; then
    ${FSLDIR}/bin/convertwarp --ref=$FSLDIR/data/standard/MNI152_T1_1mm --warp1=T1_orig_ud_warp --midmat=T1_orig_ud_to_T1.mat --warp2=T1_to_MNI_warp --out=T1_orig_to_MNI_warp
    ${FSLDIR}/bin/applywarp --rel -i T1_orig -r $FSLDIR/data/standard/MNI152_T1_1mm -w T1_orig_to_MNI_warp -o T1_brain_to_MNI --interp=spline
else
    ${FSLDIR}/bin/convertwarp --ref=$FSLDIR/data/standard/MNI152_T1_1mm --premat=T1_orig_ud_to_T1.mat --warp1=T1_to_MNI_warp --out=T1_orig_to_MNI_warp
    ${FSLDIR}/bin/applywarp --rel -i T1_orig -r $FSLDIR/data/standard/MNI152_T1_1mm -w T1_orig_to_MNI_warp -o T1_brain_to_MNI --interp=spline
fi

#Create brain mask
${FSLDIR}/bin/invwarp --ref=T1 -w T1_to_MNI_warp_coef -o T1_to_MNI_warp_coef_inv
${FSLDIR}/bin/applywarp --rel --interp=trilinear --in=$templ/MNI152_T1_1mm_brain_mask --ref=T1 -w T1_to_MNI_warp_coef_inv -o T1_brain_mask
${FSLDIR}/bin/fslmaths T1 -mul T1_brain_mask T1_brain
${FSLDIR}/bin/fslmaths T1_brain_to_MNI -mul $templ/MNI152_T1_1mm_brain_mask T1_brain_to_MNI

# clean and move files
rm -f grot* *tmp*
mkdir transforms
mv *MNI* transforms/
mv *_to_* transforms/
mv transforms/T1_brain_to_MNI.nii.gz .


#Run fast
mkdir T1_fast
${FSLDIR}/bin/fast -b -o T1_fast/T1_brain T1_brain

#Binarize PVE masks
if [ -f T1_fast/T1_brain_pveseg.nii.gz ] ; then
    $FSLDIR/bin/fslmaths T1_fast/T1_brain_pve_0.nii.gz -thr 0.5 -bin T1_fast/T1_brain_CSF_mask.nii.gz
    $FSLDIR/bin/fslmaths T1_fast/T1_brain_pve_1.nii.gz -thr 0.5 -bin T1_fast/T1_brain_GM_mask.nii.gz
    $FSLDIR/bin/fslmaths T1_fast/T1_brain_pve_2.nii.gz -thr 0.5 -bin T1_fast/T1_brain_WM_mask.nii.gz
fi

#Apply bias field correction to T1
if [ -f T1_fast/T1_brain_bias.nii.gz ] ; then
    ${FSLDIR}/bin/fslmaths T1.nii.gz -div T1_fast/T1_brain_bias.nii.gz T1_unbiased.nii.gz
    ${FSLDIR}/bin/fslmaths T1_brain.nii.gz -div T1_fast/T1_brain_bias.nii.gz T1_unbiased_brain.nii.gz
else
    echo "WARNING: There was no bias field estimation. Bias field correction cannot be applied to T1."
fi

#Run First
mkdir T1_first

#Creates a link inside T1_first to ./T1_unbiased_brain.nii.gz (In the present working directory)
ln -s ../T1_unbiased_brain.nii.gz T1_first/T1_unbiased_brain.nii.gz
${FSLDIR}/bin/run_first_all -i T1_first/T1_unbiased_brain -b -o T1_first/T1_first

# Get hippocampus from FIRST segmentations
fslmaths T1_first/T1_first_all_fast_firstseg.nii.gz -thr 16.5 -uthr 17.5 -bin T1_first/T1_first_all_fast_firstseg_L_hipp.nii.gz
fslmaths T1_first/T1_first_all_fast_firstseg.nii.gz -thr 52.5 -uthr 53.5 -bin T1_first/T1_first_all_fast_firstseg_R_hipp.nii.gz

#Run Siena
$BB_BIN_DIR/bb_structural_pipeline/bb_sienax `pwd`/..

